make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 

# Make data base, printed on Thu May 18 23:30:45 2023

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
OSMOSISD_NODE = tcp://localhost:26657
# environment
VSCODE_CRASH_REPORTER_PROCESS_TYPE = extensionHost
# makefile (from `Makefile', line 5)
DOCKER_BUF := docker run -v /Users/khanh/iavl4:/workspace --workdir /workspace bufbuild/buf
# environment
NVM_INC = /Users/khanh/nvm/versions/node/v14.18.1/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/khanh/iavl4
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","osLocale":"en-vn","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_INJECTION = 1
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from `Makefile', line 2)
VERSION := 1.0.0-alpha.1-42-g41c46c9
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_CWD = /Users/khanh/osmosis
# environment
avenger = chains@192.168.1.7
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /Users/khanh/nvm/versions/node/v14.18.1/bin:/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/khanh/nvm/versions/node/v14.18.1/bin:/opt/homebrew/bin:/Users/khanh/.cargo/bin:/Users/khanh/go/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/Users/khanh/go/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin
# makefile (from `Makefile', line 6)
DOCKER := /usr/local/bin/docker
# environment
ZDOTDIR = /Users/khanh
# environment
GOPATH = /Users/khanh/go
# environment
NVM_BIN = /Users/khanh/nvm/versions/node/v14.18.1/bin
# environment
LaunchInstanceID = 2409E61F-9D0B-4782-AC27-E7485A5ABE75
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `Makefile', line 3)
COMMIT := 41c46c981d4eb5582902da0a0129f33830bb2fcd
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `Makefile', line 10)
CMDFLAGS := -ldflags -X TENDERMINT_IAVL_COLORS_ON=on 
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.V8HWGjHO5U/Listeners
# automatic
%F = $(notdir $%)
# environment
PWD = /Users/khanh/iavl4
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
GOMODCACHE = /Users/khanh/go/pkg/mod
# environment
HOME = /Users/khanh
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /Users/khanh/Library/Application Support/Code/CachedData/b3e4e68a0bc097f0ae7907b217c1119af9e03435
# environment
LOGNAME = khanh
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = -q
# makefile (from `Makefile', line 43)
golangci_lint_cmd = github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.2
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 5
# default
MAKE_VERSION := 3.81
# environment
USER = khanh
# makefile
.DEFAULT_GOAL := all
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
DIGD_NODE = tcp://localhost:26657
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# environment
TERM_PROGRAM = vscode
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/96/qd7x45qd3zdbdm50h5h205s00000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/khanh/Library/Application Support/Code/1.78-main.sock
# environment
MallocNanoZone = 0
# environment
PYTHONPATH = /opt/homebrew/lib/python3.9/site-packages
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 1.78.2
# environment
NVM_DIR = /Users/khanh/nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.25107166.25107172.CE0E9266-FF26-4186-ABFB-68DF841A3D25
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `Makefile', line 7)
HTTPS_GIT := https://github.com/cosmos/iavl.git
# automatic
+F = $(notdir $+)
# makefile (from `Makefile', line 9)
PDFFLAGS := -pdf --nodefraction=0.1
# makefile (from `Makefile', line 11)
LDFLAGS := -ldflags "-X github.com/cosmos/iavl.Version=1.0.0-alpha.1-42-g41c46c9 -X github.com/cosmos/iavl.Commit=41c46c981d4eb5582902da0a0129f33830bb2fcd -X github.com/cosmos/iavl.Branch=master"
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# environment
GIT_ASKPASS = /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
USER_ZDOTDIR = /Users/khanh
# makefile (from `Makefile', line 4)
BRANCH = $(shell git rev-parse --abbrev-ref HEAD)
# environment
LC_ALL = C
# environment
SECURITYSESSIONID = 186a4
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 1)
GOTOOLS := github.com/golangci/golangci-lint/cmd/golangci-lint
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 393
# variable set hash-table stats:
# Load=92/1024=9%, Rehash=0, Collisions=5/134=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777233, inode 25263600): 70 files, no impossibilities.

# 70 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

all: lint test install
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

.PHONY: install test-short test tools format bench fullbench profile explorecpu exploremem delve
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

format:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 38):
	find . -name '*.go' -type f -not -path "*.git*" -not -name '*.pb.go' -not -name '*pb_test.go' | xargs gofmt -w -s
	find . -name '*.go' -type f -not -path "*.git*"  -not -name '*.pb.go' -not -name '*pb_test.go' | xargs goimports -format
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2023-05-18 23:30:35
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 29):
	@echo "--> Running go test"
	@go test ./... $(LDFLAGS) -v 
	

fullbench:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 62):
	cd benchmarks && \
	go test $(LDFLAGS) -run=NOTEST -bench=RandomBytes . && \
	go test $(LDFLAGS) -tags rocksdb,pebbledb -run=NOTEST -bench=Small . && \
	go test $(LDFLAGS) -tags rocksdb,pebbledb -run=NOTEST -bench=Medium . && \
	go test $(LDFLAGS) -tags rocksdb,pebbledb -run=NOTEST -timeout=30m -bench=Large . && \
	go test $(LDFLAGS) -run=NOTEST -bench=Mem . && \
	go test $(LDFLAGS) -run=NOTEST -timeout=60m -bench=LevelDB .
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-short:
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 24):
	@echo "--> Running go test"
	@go test ./... $(LDFLAGS) -v --race --short
	

delve:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 91):
	dlv test ./benchmarks -- -test.bench=.
	

bench:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 54):
	cd benchmarks && \
	go test $(LDFLAGS) -tags pebbledb -run=NOTEST -bench=Small . && \
	go test $(LDFLAGS) -tags pebbledb -run=NOTEST -bench=Medium . && \
	go test $(LDFLAGS) -run=NOTEST -bench=RandomBytes .
	

lint:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := lint
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/11=18%
#  commands to execute (from `Makefile', line 45):
	@echo "--> Running linter"
	@go run $(golangci_lint_cmd) run --timeout=10m
	

profile:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 73):
	cd benchmarks && \
	go test $(LDFLAGS) -bench=Mem -cpuprofile=cpu.out -memprofile=mem.out . && \
	go tool pprof ${PDFFLAGS} benchmarks.test cpu.out > cpu.pdf && \
	go tool pprof --alloc_space ${PDFFLAGS} benchmarks.test mem.out > mem_space.pdf && \
	go tool pprof --alloc_objects ${PDFFLAGS} benchmarks.test mem.out > mem_obj.pdf
	

explorecpu:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 81):
	cd benchmarks && \
	go tool pprof benchmarks.test cpu.out
	

exploremem:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 86):
	cd benchmarks && \
	go tool pprof --alloc_objects benchmarks.test mem.out
	

lint-fix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 49):
	@echo "--> Running linter"
	@go run $(golangci_lint_cmd) run --fix --out-format=tab --issues-exit-code=0
	

tools:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 34):
	go get -v $(GOTOOLS)
	

install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 17):
	go install ./cmd/iaviewer
	

# files hash-table stats:
# Load=18/1024=2%, Rehash=0, Collisions=0/56=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Thu May 18 23:30:45 2023

 
